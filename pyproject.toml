[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "quantuumhedgehog-task-cli"
version = "0.1.1"
description = "A simple task management CLI application"
readme = "README.md"
requires-python = ">=3.10"
keywords = ["task", "cli", "management", "todo", "productivity"]
authors = [
    { name = "@quantuumhedgehog", email = "lutso.mykhailo@gmail.com" }
]
maintainers = [
    { name = "@quantuumhedgehog", email = "lutso.mykhailo@gmail.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Utilities"
]
dependencies = []
license = { file = "LICENSE" }

[project.urls]
Homepage = "https://github.com/quantuumhedgehog/roadmaps-python-task-tracker/wiki"
Documentation = "https://github.com/quantuumhedgehog/roadmaps-python-task-tracker#readme"
Repository = "https://github.com/quantuumhedgehog/roadmaps-python-task-tracker.git"
"Bug Tracker" = "https://github.com/quantuumhedgehog/roadmaps-python-task-tracker/issues"
Changelog = "https://github.com/quantuumhedgehog/roadmaps-python-task-tracker/blob/main/CHANGELOG.md"
"Roadmap.sh Solution" = "https://roadmap.sh/projects/task-tracker/solutions?u=66f3ac06c45e253cb03d158d"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
]

[project.scripts]
task-cli = "task_cli.__main__:main"

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = [
    "tests"
]
pythonpath = [
    "src"
]

[tool.coverage.run]
source = ["src/task_cli"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
